plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services' // Assicurati che questa riga sia presente
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.laralonghi.mindease"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias 'my-key-alias'
            keyPassword 'android'
            storeFile file('C:/Users/laral/Desktop/TESI/VSC/Tesi-Project/flutter_app/mindease/my-release-key.keystore')
            storePassword 'android'
        }
    }
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.laralonghi.mindease"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode= 4 // Incrementa questo numero
        versionName = flutterVersionName
        multiDexEnabled true

    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
           // signingConfig = signingConfigs.debug
            signingConfig signingConfigs.release
            minifyEnabled true // Imposta su true se vuoi abilitare il minification
            shrinkResources true // Abilita la rimozione delle risorse non utilizzate

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Add the dependencies for the Firebase products you want to use
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation platform('com.google.firebase:firebase-bom:32.2.0')

    // Add the dependencies for the Firebase products you want to use
    // For example, to use Firebase Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    // Add any other Firebase dependencies here, for example:
    // implementation 'com.google.firebase:firebase-auth-ktx'
    // implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.android.support:multidex:1.0.3'

}

// Add this at the bottom of the file
apply plugin: 'com.google.gms.google-services'
